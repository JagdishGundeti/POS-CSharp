<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSelect.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AcOsJznKiNMTAAAAAElFTkSuQmCC
</value>
  </data>
</root>